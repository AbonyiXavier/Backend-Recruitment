# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Customer {
  id: ID!

  """Date and time when object was created."""
  createdAt: Timestamp!

  """Date and time when the object was updated last time."""
  updatedAt: Timestamp!

  """Date and time when the object was deleted"""
  deletedAt: Timestamp!
  email: String!
  role: Role!
  code: Float!
  emailConfirm: Boolean!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

"""Customer Role"""
enum Role {
  USER
  ADMIN
}

type CustomersResponseOutput {
  """Total Count of results"""
  totalCount: Float!

  """Total Pages of results"""
  totalPages: Float!

  """Current page number starting 0"""
  currentPage: Float!

  """boolean flag to indicate if more pages exists"""
  nextPage: Boolean!

  """Array of customers output"""
  customers: [Customer!]!
}

type ICustomer {
  id: ID!
  email: String!
  role: Role!
  code: Float!
  emailConfirm: Boolean!
}

type AuthResponseOutput {
  accessToken: String!
  refreshToken: String!
  customer: ICustomer!
}

type LogoutResponseOutput {
  loggedOut: Boolean!
}

type NewTokenResponseOutput {
  accessToken: String!
  refreshToken: String!
}

type Query {
  """Fetch list of customers"""
  customers(
    """Pagination input"""
    paginationArgs: PaginationArgs!

    """search input"""
    searchBy: CustomerSearchByInput
  ): CustomersResponseOutput!

  """Fetch a customer"""
  customer: Customer!
}

input PaginationArgs {
  limit: Int! = 20
  offset: Int! = 0
}

input CustomerSearchByInput {
  searchTerm: String
}

type Mutation {
  """SignUp a customer"""
  signUp(input: SignUpInput!): AuthResponseOutput!

  """Sign in a customer"""
  signIn(input: SignInInput!): AuthResponseOutput!

  """confirm activation cod"""
  confirmActivationCode(input: ActivateCodeInput!): ICustomer!

  """Log out a customer"""
  logOut(id: String!): LogoutResponseOutput!

  """Get new tokens for a customer when accessToken expires"""
  getNewTokens: NewTokenResponseOutput!

  """Change customer password"""
  changePassword(input: CustomerChangePasswordInput!): Customer!

  """Resend activation code"""
  resendActivationCode(email: String!): Customer!

  """Update a customer"""
  updateCustomer(id: String!, input: UpdateCustomerInput!): Customer!

  """Delete a customer"""
  deleteCustomer(id: String!): Customer!
}

input SignUpInput {
  email: String!
  password: String!
  role: String
  emailConfirm: Boolean = false
}

input SignInInput {
  email: String!
  password: String!
}

input ActivateCodeInput {
  email: String!
  code: Float!
}

input CustomerChangePasswordInput {
  oldPassword: String!
  newPassword: String!
}

input UpdateCustomerInput {
  email: String
  role: Role
}